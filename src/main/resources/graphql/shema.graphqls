# Schéma pour le type Client
type Client {
    id: ID!
    nom: String!
    prenom: String!
    email: String!
    telephone: String!
}

# Schéma pour le type Chambre
type Chambre {
    id: ID!
    type: String!
    prix: Float!
    disponible: Boolean!
}

# Schéma pour le type Reservation
type Reservation {
    id: ID!
    client: Client!
    chambre: Chambre!
    dateDebut: String!
    dateFin: String!
    preferences: String
}

# Schéma pour le type Utilisateur
type Utilisateur {
    id: ID!
    nomUtilisateur: String!
    motDePasse: String!
    role: String!
}

# Queries pour récupérer les données
type Query {
    # Client Queries
    allClients: [Client]
    clientById(id: ID!): Client

    # Chambre Queries
    allChambres: [Chambre]
    chambreById(id: ID!): Chambre

    # Reservation Queries
    allReservations: [Reservation]
    reservationById(id: ID!): Reservation

    # Utilisateur Queries
    allUtilisateurs: [Utilisateur]
    utilisateurById(id: ID!): Utilisateur
}

# Inputs pour les mutations
input ClientInput {
    nom: String!
    prenom: String!
    email: String!
    telephone: String!
}

input ChambreInput {
    type: String!
    prix: Float!
    disponible: Boolean!
}

input ReservationInput {
    clientId: ID!
    chambreId: ID!
    dateDebut: String!
    dateFin: String!
    preferences: String
}

input UtilisateurInput {
    nomUtilisateur: String!
    motDePasse: String!
    role: String!
}

# Mutations pour modifier les données
type Mutation {
    # Client Mutations
    saveClient(client: ClientInput): Client

    # Chambre Mutations
    saveChambre(chambre: ChambreInput): Chambre

    # Reservation Mutations
    saveReservation(reservation: ReservationInput): Reservation

    # Utilisateur Mutations
    saveUtilisateur(utilisateur: UtilisateurInput): Utilisateur
}
